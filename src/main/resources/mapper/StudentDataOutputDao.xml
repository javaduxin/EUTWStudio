<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thoughtWorks.dao.StudentDataOutputDao">
    <select id="queryStudentList" resultType="map" parameterType="map">
        SELECT
        student.`no`,
        student.`name` ,
        student.`gender`,
        student.`department_id`,
        student.`direction_id`,
        student.`level`,
        student.`classes_id` ,
        student.`profession_id`,
        student.`parent_name` ,
        student.`origin_profession_id` ,
        (SELECT para_dispname FROM t_famous_family WHERE t_famous_family.para_no=student.famous_family) famous_family,
        student.`idcard` ,
        student.`born` ,
        student.`head_image`,
        student.`student_type`,
        student.`in_school`,
        student.`graduate_school`,
        student.`blood` ,
        student.`height`,
        student.`weight`,
        student.`political_status` ,
        student.`pre_school_education` ,
        student.`student_classify`,
        student.`idcard_address`,
        student.`actual_address`,
        student.`origin_address`,
        student.`family_phone` ,
        student.`family_zip_code` ,
        student.`student_contact_method` ,
        student.`emergency_contact_name` ,
        student.`emergency_contact_method` ,
        student.`account_in`,
        student.`email` ,
        student.`qq` ,
        student.`area_origin_name`,
        student.`sat_score` ,
        student.`pre_school_file_where_location`,
        student.`file_in` ,
        student.`pre_school_name` ,
        student.`pre_school_account_where_station` ,
        student.`pre_school_work` ,
        student.`pre_school_staff` ,
        student.`own_experience` ,
        student.`own_punishment` ,
        student.`student_status` ,
        student.`payment_status_first_year` ,
        student.`payment_status_second_year` ,
        student.`payment_status_forth_year` ,
        student.`payment_status_third_year` ,
        student.`practice_learning_type` ,
        student.`stay_type` ,
        student.`off_school_stay_address` ,
        student.`area_id` ,
        student.`floor_id` ,
        student.`room_id` ,
        student.`counselor_id` ,
        student.`is_out` ,
        student.`religion` ,
        student.`hard_type` ,
        student.`native_place` ,
        student.`is_marry` ,
        student.`health_status` ,
        student.`arrears_first_year`,
        student.`arrears_forth_year` ,
        student.`arrears_third_year` ,
        student.`arrears_second_year` ,
        student.`teacher_id` ,
        student.`community_teacher_id` ,
        student.`origin_profession` ,
        student.`group`,
        student.`first_scholarship` ,
        student.`second_scholarship` ,
        student.`third_scholarship` ,
        student.`first_stipend` ,
        student.`second_stipend` ,
        student.`third_stipend` ,
        student.`arrears_fifth_year` ,
        student.`payment_status_fifth_year`,
        student.`units_or_projects_practical_type`,
        student.`first_year` ,
        student.`second_year` ,
        student.`third_year` ,
        student.`units_or_projects_practical_type_contact` ,
        student.`units_or_projects_practical_type_contact_phone` ,
        student.`updateOffCampusContactPhone` ,
        student.`updateOffCampusContactName` ,
        student.`arrears_sixth_year`,
        student.`payment_status_sixth_year`,
        student.`otherHealthStatus`,
        student.`first_time_medical_insurance` ,
        student.`second_time_medical_insurance` ,
        student.`third_time_medical_insurance` ,
        student.`first_medical_insurance` ,
        student.`second_medical_insurance` ,
        student.`third_medical_insurance` ,
        student.`partyOrGroupOrganization`,
        student.`partyOrGroupOrganizationText` ,
        student.`religionText`,
        student.`Pre_admissionOrReward`,
        student.`Pre_admissionOrRewardText` ,
        student.`zyFile`,
        department.name department,
        profession.name profession,
        direction.name direction,
        class.name classes,
        area.name area,
        floor.name floor,
        room.name room,
        teacher.name teacher_name,
        teacherCommunity.name community_teacher_name
        FROM t_student student

        LEFT JOIN (SELECT
        id,
        name
        FROM t_department) department ON department.id = student.department_id

        LEFT JOIN (SELECT
        id,
        name
        FROM t_direction) direction ON direction.id = student.direction_id

        LEFT JOIN (SELECT
        id,
        name
        FROM t_profession) profession ON profession.id = student.profession_id

        LEFT JOIN (SELECT
        id,
        name
        FROM t_classes) class ON class.id = student.classes_id

        LEFT JOIN (SELECT
        id,
        name
        FROM t_area) area ON area.id = student.area_id

        LEFT JOIN (SELECT
        id,
        name
        FROM t_floor) floor ON floor.id = student.floor_id

        LEFT JOIN (SELECT
        id,
        name
        FROM t_room) room ON room.id = student.room_id
        LEFT JOIN (SELECT
        t_teacher.no,
        name,
        gender
        FROM t_teacher) teacher ON teacher.no = student.teacher_id
        LEFT JOIN (SELECT
        t_teacher.no,
        name,
        gender
        FROM t_teacher) teacherCommunity ON teacherCommunity.no = student.community_teacher_id

        WHERE
        student.name LIKE #{dataSearchDto.dataName}
        and student.no LIKE #{dataSearchDto.studentNo}
        and student.gender LIKE #{dataSearchDto.sex}


        <if test=" dataSearchDto.classesId !=''">
            and student.classes_id LIKE #{dataSearchDto.classesId}
        </if>

        <if test=" dataSearchDto.dataLevel != ''">
            and student.level = #{dataSearchDto.dataLevel}
        </if>

        <if test=" dataSearchDto.departmentId !=''">
            and student.department_id = #{dataSearchDto.departmentId}
        </if>

        <if test=" dataSearchDto.directionId !=''">
            and student.direction_id = #{dataSearchDto.directionId}
        </if>
        <if test=" dataSearchDto.professionId !=''">
            and student.profession_id = #{dataSearchDto.professionId}
        </if>

        <if test=" dataSearchDto.teacherId !=''">
            and student.teacher_id = #{dataSearchDto.teacherId}
        </if>

        <if test=" dataSearchDto.communityTeacherId !=''">
            and student.community_teacher_id = #{dataSearchDto.communityTeacherId}
        </if>

        <if test=" dataSearchDto.TypeOfAccommodation !=''">
            and student.stay_type = #{dataSearchDto.TypeOfAccommodation}
        </if>
        <if test=" dataSearchDto.studentStatusSearch !=''">
            and student.student_status = #{dataSearchDto.studentStatusSearch}
        </if>

        <if test=" dataSearchDto.areaId !=''">
            <if test="dataSearchDto.TypeOfAccommodation == 1">
                and student.area_id = #{dataSearchDto.areaId}
            </if>
        </if>
        <if test=" dataSearchDto.floorId !=''">
            <if test="dataSearchDto.TypeOfAccommodation == 1">
                and student.floor_id = #{dataSearchDto.floorId}
            </if>
        </if>
        <if test=" dataSearchDto.roomId !=''">
            <if test="dataSearchDto.TypeOfAccommodation == 1">
                and room.name LIKE #{dataSearchDto.roomId}
            </if>
        </if>

        ORDER BY -student_status DESC
    </select>
</mapper>